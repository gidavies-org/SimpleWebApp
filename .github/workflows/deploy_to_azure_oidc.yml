# Reusable workflow to deploy a Node app to an Azure App Service using OIDC.
#
# Calling workflows include:
#   - The production deployment workflow deploy_prod.yml
#   - The test deployment workflow on labelling in a PR deploy_test.yml

name: Deploy to Azure using OIDC

on:
  workflow_call:
    inputs:
      envName:
        required: true
        type: string
      appServiceName:
        required: true
        type: string
      acrName:
        required: true
        type: string
      tagName:
        required: true 
        type: string
    secrets:            # Rather than inherit all, explicitly state and require the needed secrets
      PUBLISH_PROFILE:
        required: false
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true

jobs:
  buildPushDeploy:
    name: Build and push container to ACR then deploy to App Service
    permissions:
      id-token: write  # Needed for OIDC 
      contents: read
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.envName }}
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    - name: Azure login using OIDC
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
    - name: Build and push container to an Azure Container Registry
      run: |
        az acr login --name ${{ inputs.acrName }}
        docker build . -t ${{ inputs.tagName }}
        docker tag ${{ inputs.tagName }} ${{ inputs.acrName }}.azurecr.io/${{ inputs.tagName }}:${{ github.sha }}
        docker push ${{ inputs.acrName }}.azurecr.io/${{ inputs.tagName }}:${{ github.sha }}

    - name: Deploy container from ACR to Azure App Service
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ inputs.appServiceName }}
        images: '${{ inputs.acrName }}.azurecr.io/${{ inputs.tagName }}:${{ github.sha }}'
    
    - name: Add container deployment job summary
      run: echo '### Container ${{ inputs.acrName }}.azurecr.io/${{ inputs.tagName }}:${{ github.sha }} deployed to App Service ${{ inputs.appServiceName }} :dart:' >> $GITHUB_STEP_SUMMARY